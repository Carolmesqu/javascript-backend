
elementos	n	    2n	      n^2	2*n^2	1	n^3
1	        =+A2	=2*A2	=A2*A2	=2*D2	1	=A2A2A2
=+A2*2	    =+A3	=2*A3	=A3*A3	=2*D3	1	=A3A3A3
=+A3*2	    =+A4	=2*A4	=A4*A4	=2*D4	1	=A4A4A4
=+A4*2	    =+A5	=2*A5	=A5*A5	=2*D5	1	=A5A5A5
=+A5*2	    =+A6	=2*A6	=A6*A6	=2*D6	1	=A6A6A6

Que entender a complexidade de um algoritmo é essencial para 
que nossos programas funcionem da melhor forma possível;

Que analisamos esta complexidade observando as operações 
feitas pelo código e transformando essas operações em números;

Que performance e tempo impactam em custos e também na experiência 
do usuário do programa, pois um programa pode ficar muito lento 
dependendo da quantidade de dados que precisam ser processados;

A analisar os dados de performance e comparar os números para 
verificar a performance de um algoritmo com relação a quantidade 
de operações efetuadas e tempo;

Como o volume de operações efetuadas por um algoritmo se traduz 
em tempo de processamento, simulando a capacidade de um processador 
de computador.